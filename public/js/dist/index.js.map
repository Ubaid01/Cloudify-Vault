{"mappings":"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","sources":["<anon>","public/js/index.js","public/js/user_settings.js","public/js/alert.js","public/js/file_handling.js"],"sourcesContent":["var $64noG$axios = require(\"axios\");\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n$parcel$export(module.exports, \"setLastRefresh\", () => $de6cac7a9ed0427b$export$c609ddf809432d5c);\n$parcel$export(module.exports, \"getLastRefresh\", () => $de6cac7a9ed0427b$export$608546384dc1d9e6);\n\nfunction $f3eba578751864d4$export$2e2bcd8739ae039(msg, status = 'info', duration = 3000) {\n    if (!msg) return;\n    const existing = document.getElementById('flash-alert');\n    if (existing) existing.remove();\n    const alert = document.createElement('div');\n    alert.className = `alert alert-${status}`;\n    alert.id = 'flash-alert';\n    alert.style.setProperty('--duration', `${duration / 10}ms`); // 0.3s.\n    const span = document.createElement('span');\n    span.textContent = msg;\n    alert.appendChild(span);\n    document.body.appendChild(alert);\n    setTimeout(()=>alert.classList.add('fade-out'), duration - 500);\n    setTimeout(()=>alert.remove(), duration);\n}\n\n\n\nconst $2a646fe47127aeb2$export$e02251cfbe407ee6 = async (data, type)=>{\n    try {\n        const url = type === 'login' ? \"/api/users/login\" : \"/api/users/signup\"; // MISTAKE ; 1st give url in axios THEN configs.\n        const res = await (0, ($parcel$interopDefault($64noG$axios)))(url, {\n            method: 'POST',\n            data: data\n        });\n        if (res.data.status === 'success') {\n            type = type === 'login' ? 'Logged in' : 'Signed up';\n            (0, $f3eba578751864d4$export$2e2bcd8739ae039)(`${type} successfully! Redirecting...`, 'success');\n            window.setTimeout(()=>{\n                location.assign('/my-uploads');\n            }, 1500);\n        }\n    } catch (err) {\n        (0, $f3eba578751864d4$export$2e2bcd8739ae039)(err.response.data.message, 'error');\n    }\n};\nconst $2a646fe47127aeb2$export$a0973bcfe11b05c9 = async ()=>{\n    try {\n        const response = await (0, ($parcel$interopDefault($64noG$axios))).get('/api/users/logout');\n        if (response.data.status === 'success') {\n            location.reload(true);\n            location.href = '/';\n        }\n    } catch (err) {\n        (0, $f3eba578751864d4$export$2e2bcd8739ae039)(err.response.data.message, 'error');\n    }\n};\nlet $2a646fe47127aeb2$var$timer;\nconst $2a646fe47127aeb2$var$REFRESH_INTERVAL = 3480000;\nconst $2a646fe47127aeb2$var$updateToken = async ()=>{\n    try {\n        const response = await (0, ($parcel$interopDefault($64noG$axios)))('/api/users/refresh-token', {\n            method: 'POST',\n            withCredentials: true // Important: send cookies with the request on CORS.\n        });\n        if (response.data.status === 'success') {\n            (0, $de6cac7a9ed0427b$export$c609ddf809432d5c)(Date.now());\n            $2a646fe47127aeb2$export$f39c3058ef07db36(); // ? Restart timer with new adjusted time AS it won't be manually reset with new time. So for this used Timeout() instead of Interval() as I am managing timer myself after each API call. Now also don't need to handle firstTime case separately.\n        // location.reload( true ) ; // Cookie is updated on browser side, no reload is required.\n        }\n    } catch (err) {\n        console.log(err.response.data.message);\n    }\n};\nfunction $2a646fe47127aeb2$export$f39c3058ef07db36() {\n    const lastRefresh = (0, $de6cac7a9ed0427b$export$608546384dc1d9e6)();\n    let elapsed = Date.now() - lastRefresh;\n    const adjustedTime = Math.max($2a646fe47127aeb2$var$REFRESH_INTERVAL - elapsed, 0);\n    // console.log( adjustedTime ) ;\n    clearTimeout($2a646fe47127aeb2$var$timer); // Clear previous timer AS setInterval() uses same time for each interval again and again.\n    $2a646fe47127aeb2$var$timer = setTimeout($2a646fe47127aeb2$var$updateToken, adjustedTime);\n}\n\n\n\n\nconst $df16eb860252f381$export$69895bd328f2dda9 = async (files)=>{\n    try {\n        const response = await (0, ($parcel$interopDefault($64noG$axios)))('/api/users/uploads', {\n            method: 'POST',\n            data: files\n        });\n        if (response.data.status === 'success') {\n            (0, $f3eba578751864d4$export$2e2bcd8739ae039)('Files uploaded successfully!', 'success');\n            window.setTimeout(()=>location.reload(), 750);\n        }\n    } catch (err) {\n        (0, $f3eba578751864d4$export$2e2bcd8739ae039)(err.response.data.message, 'error');\n    }\n};\nconst $df16eb860252f381$export$dccb98b97a3cb8be = async (id)=>{\n    try {\n        const response = await (0, ($parcel$interopDefault($64noG$axios))).delete(`/api/users/delete-file?deleteToken=${id}`);\n        if (response.status === 204) (0, $f3eba578751864d4$export$2e2bcd8739ae039)('File deleted successfully!');\n    } catch (err) {\n        (0, $f3eba578751864d4$export$2e2bcd8739ae039)(err.response.data.message, 'error');\n    }\n};\n\n\n\nconst $de6cac7a9ed0427b$var$signupForm = document.querySelector('.signup-form');\nconst $de6cac7a9ed0427b$var$loginForm = document.querySelector('.login-form');\nconst $de6cac7a9ed0427b$var$logoutBtn = document.getElementById('logout');\nconst $de6cac7a9ed0427b$var$uploadForm = document.querySelector('.upload-form');\nconst $de6cac7a9ed0427b$var$loader = document.querySelector('.div-loader');\nconst $de6cac7a9ed0427b$var$uploadsGrid = document.querySelector('.uploads-grid'); // MISTAKE ; Attach the event listener to the COMMON parent element. WHICH is GRID not CARD.\nconst $de6cac7a9ed0427b$var$hasUser = document.body.dataset.user;\nfunction $de6cac7a9ed0427b$export$c609ddf809432d5c(timestamp) {\n    localStorage.setItem('lastTokenRefresh', timestamp);\n// console.log( new Date( timestamp ).toLocaleTimeString() ) ;\n}\nfunction $de6cac7a9ed0427b$export$608546384dc1d9e6() {\n    return parseInt(localStorage.getItem('lastTokenRefresh')) || 0;\n}\nif ($de6cac7a9ed0427b$var$hasUser) {\n    if (!$de6cac7a9ed0427b$export$608546384dc1d9e6()) $de6cac7a9ed0427b$export$c609ddf809432d5c(Date.now());\n    (0, $2a646fe47127aeb2$export$f39c3058ef07db36)();\n} else localStorage.removeItem('lastTokenRefresh');\nif ($de6cac7a9ed0427b$var$signupForm) $de6cac7a9ed0427b$var$signupForm.addEventListener('submit', async (e)=>{\n    e.preventDefault();\n    const form = new FormData();\n    const email = document.getElementById('email').value;\n    if (/[A-Z]/.test(email)) {\n        (0, $f3eba578751864d4$export$2e2bcd8739ae039)('Email should be in lowercase');\n        return;\n    }\n    form.append('name', document.getElementById('name').value);\n    form.append('email', email);\n    form.append('password', document.getElementById('password').value);\n    form.append('passwordConfirm', document.getElementById('passwordConfirm').value);\n    form.append('photo', document.getElementById('photo').files[0]);\n    // for ( let pair of form.entries() )      console.log(pair[0] + ': ' + pair[1] ) ;\n    await (0, $2a646fe47127aeb2$export$e02251cfbe407ee6)(form, 'signup');\n});\nif ($de6cac7a9ed0427b$var$loginForm) $de6cac7a9ed0427b$var$loginForm.addEventListener('submit', async (e)=>{\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const remember = document.getElementsByName('remember')[0].checked;\n    await (0, $2a646fe47127aeb2$export$e02251cfbe407ee6)({\n        email: email,\n        password: password\n    }, 'login');\n});\nif ($de6cac7a9ed0427b$var$logoutBtn) $de6cac7a9ed0427b$var$logoutBtn.addEventListener('click', (0, $2a646fe47127aeb2$export$a0973bcfe11b05c9));\nasync function $de6cac7a9ed0427b$var$handleUploadForm() {\n    const filesInput = document.getElementById('files');\n    // console.log( filesInput.files ) ;  \n    const maxSize = 5242880;\n    const form = new FormData();\n    for (const file of filesInput.files){\n        if (file.size > maxSize) {\n            (0, $f3eba578751864d4$export$2e2bcd8739ae039)('File size should be less than 5MB');\n            return;\n        }\n        form.append('files', file); // Directly appending all files into 1-field would accept 0 files i.e. [].\n    }\n    await (0, $df16eb860252f381$export$69895bd328f2dda9)(form);\n}\nif ($de6cac7a9ed0427b$var$uploadForm) $de6cac7a9ed0427b$var$uploadForm.addEventListener('submit', async (e)=>{\n    e.preventDefault();\n    $de6cac7a9ed0427b$var$loader.style.display = 'block';\n    await $de6cac7a9ed0427b$var$handleUploadForm();\n    $de6cac7a9ed0427b$var$loader.style.display = 'none';\n});\nif ($de6cac7a9ed0427b$var$uploadsGrid) $de6cac7a9ed0427b$var$uploadsGrid.addEventListener('click', async (e)=>{\n    const deleteBtn = e.target.closest('.btn-danger');\n    if (deleteBtn) {\n        $de6cac7a9ed0427b$var$loader.style.display = 'block';\n        const deleteId = deleteBtn.dataset.id;\n        await (0, $df16eb860252f381$export$dccb98b97a3cb8be)(deleteId);\n        $de6cac7a9ed0427b$var$loader.style.display = 'none';\n        const card = deleteBtn.closest('.upload-card');\n        card.style.transition = 'opacity 0.3s';\n        card.style.opacity = '0';\n        setTimeout(()=>card.remove(), 300);\n    }\n});\n\n\n//# sourceMappingURL=index.js.map\n","import { submitForm , logout , startAdjustedTimer } from \"./user_settings.js\" ;\r\nimport { uploadFiles , deleteFile } from \"./file_handling.js\";\r\nimport alertMsg from \"./alert.js\" ;\r\n\r\nconst signupForm = document.querySelector('.signup-form') ;\r\nconst loginForm = document.querySelector('.login-form') ;\r\nconst logoutBtn = document.getElementById('logout') ;\r\nconst uploadForm = document.querySelector('.upload-form') ;\r\nconst loader = document.querySelector('.div-loader') ;\r\nconst uploadsGrid = document.querySelector('.uploads-grid') ; // MISTAKE ; Attach the event listener to the COMMON parent element. WHICH is GRID not CARD.\r\nconst hasUser = document.body.dataset.user ;\r\n\r\n// * Only using setInterval() will work ONLY IF page is NOT refreshed OR routes NOT changed AS then index.js will be reloaded AND setInterval() is reset.\r\nexport function setLastRefresh( timestamp ) {\r\n    localStorage.setItem( 'lastTokenRefresh' , timestamp ) ;\r\n    // console.log( new Date( timestamp ).toLocaleTimeString() ) ;\r\n}\r\n\r\nexport function getLastRefresh() {\r\n    return parseInt( localStorage.getItem('lastTokenRefresh') ) || 0 ;\r\n}\r\n\r\nif( hasUser ) {\r\n    if( !getLastRefresh() )\r\n        setLastRefresh( Date.now() ) ;\r\n    startAdjustedTimer() ;\r\n}\r\nelse { // else if( timer ) wasn't working as timer resets on page reload.\r\n    localStorage.removeItem( 'lastTokenRefresh' ) ;\r\n}\r\n\r\nif( signupForm ) {\r\n    signupForm.addEventListener( 'submit' , async e => {\r\n        e.preventDefault() ;\r\n        const form = new FormData() ;\r\n        const email = document.getElementById('email').value  ;\r\n        if ( /[A-Z]/ .test(email) ) {\r\n            alertMsg('Email should be in lowercase');\r\n            return;\r\n        }\r\n        form.append( 'name' , document.getElementById('name').value ) ;\r\n        form.append( 'email' , email ) ;\r\n        form.append( 'password' , document.getElementById('password').value ) ;\r\n        form.append( 'passwordConfirm' , document.getElementById('passwordConfirm').value ) ;\r\n        form.append( 'photo' , document.getElementById('photo').files[0] ) ;\r\n        // for ( let pair of form.entries() )      console.log(pair[0] + ': ' + pair[1] ) ;\r\n        await submitForm( form , 'signup' ) ;\r\n    } ) ;\r\n}\r\n\r\nif( loginForm ) {\r\n    loginForm.addEventListener( 'submit' , async e => {\r\n        e.preventDefault() ;\r\n        const email = document.getElementById('email').value  ;\r\n        const password = document.getElementById('password').value ;\r\n        const remember = document.getElementsByName('remember')[0].checked ;\r\n        await submitForm( { email , password } , 'login' ) ;\r\n    } ) ;\r\n}\r\n\r\nif( logoutBtn ) {\r\n    logoutBtn.addEventListener( 'click' , logout ) ;\r\n}\r\n\r\nasync function handleUploadForm( ) {\r\n    const filesInput = document.getElementById('files') ;\r\n    // console.log( filesInput.files ) ;  \r\n    const maxSize = 5 * 1024 * 1024 ;\r\n    const form = new FormData() ;\r\n\r\n    for( const file of filesInput.files ) {\r\n        if( file.size > maxSize ) {\r\n            alertMsg( 'File size should be less than 5MB' ) ;\r\n            return ;\r\n        }\r\n        form.append( 'files' , file ) ; // Directly appending all files into 1-field would accept 0 files i.e. [].\r\n    }   \r\n    await uploadFiles( form ) ; \r\n}\r\n\r\nif( uploadForm ) {\r\n    uploadForm.addEventListener( 'submit' , async e => {\r\n        e.preventDefault() ;\r\n        loader.style.display = 'block' ;\r\n        await handleUploadForm( ) ;\r\n        loader.style.display = 'none' ;\r\n    } ) ;\r\n}\r\n\r\nif( uploadsGrid ) {\r\n    uploadsGrid.addEventListener( 'click' , async e => {\r\n        const deleteBtn = e.target.closest('.btn-danger') ;\r\n        if( deleteBtn ) {\r\n            loader.style.display = 'block' ;\r\n            const deleteId = deleteBtn.dataset.id ;\r\n            await deleteFile( deleteId ) ;\r\n            \r\n            loader.style.display = 'none' ;\r\n            const card = deleteBtn.closest('.upload-card') ;\r\n            card.style.transition = 'opacity 0.3s';\r\n            card.style.opacity = '0';\r\n            setTimeout( () => card.remove(), 300 ) ;\r\n        }\r\n    } ) ;\r\n}","import axios from \"axios\" ; // Can't use without Webpack OR Parcel in Browser.\r\nimport alertMsg from \"./alert.js\" ;\r\nimport { setLastRefresh , getLastRefresh } from \"./index.js\";\r\n\r\nexport const submitForm = async ( data , type ) => {\r\n    try {\r\n        const url = ( type === 'login' ) ? \"/api/users/login\" : \"/api/users/signup\" ; // MISTAKE ; 1st give url in axios THEN configs.\r\n        const res = await axios( url , {\r\n            method: 'POST' ,\r\n            data\r\n        } ) ;\r\n        if( res.data.status === 'success' ) {\r\n            type = ( type === 'login' ) ? 'Logged in' : 'Signed up' ;\r\n            alertMsg( `${type} successfully! Redirecting...` , 'success' ) ;\r\n            window.setTimeout( () => {\r\n                location.assign( '/my-uploads' ) ;\r\n            } , 1500 ) ;\r\n        }\r\n    } catch ( err ) {\r\n        alertMsg( err.response.data.message , 'error' ) ;\r\n    }\r\n}\r\n\r\nexport const logout = async () => {\r\n    try {\r\n        const response = await axios.get( '/api/users/logout' ) ;\r\n        if( response.data.status === 'success' ) {\r\n            location.reload( true ) ;\r\n            location.href = '/' ;\r\n        }\r\n    }\r\n    catch( err ) {\r\n        alertMsg( err.response.data.message , 'error' ) ;\r\n    }\r\n}\r\n\r\n\r\nlet timer ;\r\nconst REFRESH_INTERVAL = 1000 * 60 * 58 ;\r\n\r\nconst updateToken = async () => {\r\n    try {\r\n        const response = await axios('/api/users/refresh-token', {\r\n            method: 'POST',\r\n            withCredentials: true // Important: send cookies with the request on CORS.\r\n        } ) ;\r\n        if( response.data.status === 'success' ) {\r\n            setLastRefresh( Date.now() ) ;\r\n            startAdjustedTimer() ;  // ? Restart timer with new adjusted time AS it won't be manually reset with new time. So for this used Timeout() instead of Interval() as I am managing timer myself after each API call. Now also don't need to handle firstTime case separately.\r\n            // location.reload( true ) ; // Cookie is updated on browser side, no reload is required.\r\n        }\r\n    }\r\n    catch( err ) {\r\n        console.log( err.response.data.message ) ;\r\n    }\r\n}\r\n\r\nexport function startAdjustedTimer() {\r\n    const lastRefresh = getLastRefresh() ;\r\n    let elapsed = Date.now() - lastRefresh ; \r\n    const adjustedTime = Math.max( REFRESH_INTERVAL - elapsed , 0 ) ;\r\n    // console.log( adjustedTime ) ;\r\n    clearTimeout( timer ) ; // Clear previous timer AS setInterval() uses same time for each interval again and again.\r\n    timer = setTimeout( updateToken , adjustedTime ) ;\r\n}","export default function alertMsg( msg , status = 'info', duration = 3000 ) {\r\n    if ( !msg ) \r\n        return ;\r\n\r\n    const existing = document.getElementById('flash-alert') ;\r\n    if ( existing ) existing.remove() ;\r\n\r\n    const alert = document.createElement('div');\r\n    alert.className = `alert alert-${status}` ;\r\n    alert.id = 'flash-alert' ;\r\n    alert.style.setProperty('--duration', `${ duration / 10 }ms`) ; // 0.3s.\r\n\r\n    const span = document.createElement('span') ;\r\n    span.textContent = msg ;\r\n\r\n    alert.appendChild(span) ;\r\n    document.body.appendChild(alert) ;\r\n\r\n    setTimeout( () => alert.classList.add('fade-out') , duration - 500 ) ;\r\n    setTimeout( () => alert.remove() , duration ) ;\r\n}\r\n","import axios from \"axios\" ;\r\nimport alertMsg from \"./alert.js\" ;\r\n\r\nexport const uploadFiles = async files => {\r\n    try {\r\n        const response = await axios( '/api/users/uploads' , {\r\n            method: 'POST' ,\r\n            data: files\r\n        } ) ;\r\n\r\n        if( response.data.status === 'success' ) {\r\n            alertMsg( 'Files uploaded successfully!' , 'success' ) ;\r\n            window.setTimeout( () => location.reload() , 750 ) ;\r\n        }\r\n    }\r\n    catch( err ) {\r\n        alertMsg( err.response.data.message , 'error' ) ;\r\n    }\r\n} \r\n\r\nexport const deleteFile = async id => {\r\n    try {\r\n        const response = await axios.delete(`/api/users/delete-file?deleteToken=${id}`) ;\r\n        if( response.status === 204 )\r\n            alertMsg( 'File deleted successfully!' ) ;\r\n    }\r\n    catch( err ) {\r\n        alertMsg( err.response.data.message , 'error' ) ;\r\n    }\r\n}"],"names":["$2a646fe47127aeb2$var$timer","$64noG$axios","require","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$f3eba578751864d4$export$2e2bcd8739ae039","msg","status","duration","existing","document","getElementById","remove","alert","createElement","className","id","style","setProperty","span","textContent","appendChild","body","setTimeout","classList","add","module","exports","$de6cac7a9ed0427b$export$c609ddf809432d5c","$de6cac7a9ed0427b$export$608546384dc1d9e6","$2a646fe47127aeb2$export$e02251cfbe407ee6","data","type","url","res","method","window","location","assign","err","response","message","$2a646fe47127aeb2$export$a0973bcfe11b05c9","reload","href","$2a646fe47127aeb2$var$REFRESH_INTERVAL","$2a646fe47127aeb2$var$updateToken","withCredentials","Date","now","$2a646fe47127aeb2$export$f39c3058ef07db36","console","log","lastRefresh","adjustedTime","Math","max","clearTimeout","$df16eb860252f381$export$69895bd328f2dda9","files","$df16eb860252f381$export$dccb98b97a3cb8be","delete","$de6cac7a9ed0427b$var$signupForm","querySelector","$de6cac7a9ed0427b$var$loginForm","$de6cac7a9ed0427b$var$logoutBtn","$de6cac7a9ed0427b$var$uploadForm","$de6cac7a9ed0427b$var$loader","$de6cac7a9ed0427b$var$uploadsGrid","$de6cac7a9ed0427b$var$hasUser","dataset","user","timestamp","localStorage","setItem","parseInt","getItem","$de6cac7a9ed0427b$var$handleUploadForm","filesInput","form","FormData","file","size","append","removeItem","addEventListener","preventDefault","email","value","test","password","getElementsByName","checked","display","deleteBtn","target","closest","deleteId","card","transition","opacity"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}